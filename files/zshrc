# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory autocd
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/Users/ryanschie/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# Loading files
source ~/.zprezto/init.zsh

# Use VIM Mode
bindkey -v
set -o vi
export KEYTIMEOUT=1

# PATHS
export EDITOR=/usr/local/bin/vim
export VISUAL=/usr/local/bin/vim
export PATH=${HOME}/.bin:${PATH}
export GPG_TTY=$(tty)
export CLICOLOR_FORCE=''
export GREP_COLORS='mt=01;31:fn=36'

# Custom OPTS
unsetopt correct
unsetopt correct_all

####### USEFUL THINGS #######

# Main Aliases
alias src="source ~/.zshrc"
alias orc="vim ~/.zshrc"
alias vimrc="vim ~/.vim/vimrc"
alias l="ls -lFhH"
alias la="ls -lFAHh"
alias -g G="| ggrep"
alias -g LS="| less -r"
alias rmrf="rm -rf"
alias mk="mkdir -p"
alias grep="nocorrect ggrep --color=auto"
alias grip="nocorrect ggrep --color=auto -riP"
alias mmv="noglob zmv -W"

pcopy() { pwd | pbcopy }
tch () { mkdir -p $(dirname $*); touch $* }
mkd () { mkdir -p $*; cd $* }
trash () { mv $* ~/.Trash/ }
title () { set-tab-title $* }

# Finding
sar () { find $1 -name "*.$2" -type f -exec perl -p -i -e "$3" -- {} + }
sarfd () { fd -t f -x perl -p -i -e "$1" -- {} }
search () { find -L $1 -name "$2" ${*:3} }

# Git
alias g="git"
alias gconf="git config --global -e"

# Docker
alias dk="docker"
alias dki="docker image"
alias dkc="docker container"
alias dkk="docker compose"
alias dkku="docker compose up"
alias dkkb="docker compose build"
alias dkkd="docker compose down"

dkrun () { docker run -it $@ /bin/bash }
dkconn () { docker exec -it $@ /bin/bash }

# Go
gobin () { var=`basename $(pwd)`; go install ./...; $GOPATH/bin/${var} config/$1.json }
gogbin () { var=`basename $(pwd)`; go generate ./...; go install ./...; $GOPATH/bin/${var} config/config.json }
gotest () { go test ./... | grep -v '\[no test files\]' }

# FE-related
alias em="ember"
alias ys="yarn start"
alias yl="yarn local"
alias y="yarn"
alias yf="yarn --force"
alias yup="yarn upgrade-interactive"
alias rn="react-native"
alias watchreset="watchman watch-del-all"

yp() {
  yarn packages/$1 $@[2,-1]
}
nodeinspect() { node --inspect-brk node_modules/.bin/"$@" }

####### NOT NORMALLY USEFUL #######

precmd() {
  if [ $ITERM_SESSION_ID ]; then
    echo -ne "\e]1;${PWD##*/}\a"
  fi
}

function zle-line-finish
{
  print -n -- "\E]50;CursorShape=0\C-G" # block
}

zle -N zle-line-finish

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

autoload -U +X bashcompinit && bashcompinit

if [ -f "${HOME}/.zshrc-override" ]; then
  source "${HOME}/.zshrc-override";
fi
